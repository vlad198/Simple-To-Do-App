{"version":3,"sources":["components/Add.js","components/Edit.js","components/List.js","App.js","serviceWorker.js","index.js"],"names":["Add","react_default","a","createElement","className","onSubmit","this","props","handleSubmit","type","name","id","required","onChange","handleChange","Component","Edit","_this","userId","match","params","e","editHandler","history","push","List","data","map","item","index","key","style","float","cursor","Link","to","concat","onClick","deleteClickHandler","color","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","preventDefault","newItm","state","newData","setState","document","getElementById","value","defineProperty","target","deleteItem","indexElement","parseInt","filter","onEdit","newArr","update","_this2","HashRouter","Switch","Route","exact","path","render","Add_Add","assign","List_List","Edit_Edit","Boolean","window","location","hostname","ReactDOM","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc67b347.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Add extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"mx-auto\">\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"name\"\r\n              id=\"reset\"\r\n              required\r\n              onChange={this.props.handleChange}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button className=\"btn btn-outline-primary\">Add</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Edit extends Component {\r\n  render() {\r\n    const userId = this.props.match.params.id;\r\n\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={e => {\r\n            this.props.editHandler(e, userId);\r\n            this.props.history.push(\"/\");\r\n          }}\r\n        >\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"update\"\r\n              required\r\n              onChange={this.props.handleChange}\r\n              className=\"form-control\"\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button className=\"btn btn-outline-primary\">Update</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class List extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul className=\"list-group\">\r\n          {this.props.data.map((item, index) => (\r\n            <li className=\"list-group-item text-center\" key={index}>\r\n              {item}\r\n              <span style={{ float: \"right\", cursor: \"pointer\" }}>\r\n                <Link to={`/edit/${index}`}>\r\n                  <i className=\"fas fa-pencil-alt\" />{\" \"}\r\n                </Link>\r\n                <i\r\n                  onClick={this.props.deleteClickHandler}\r\n                  id={index}\r\n                  style={{ color: \"red\" }}\r\n                  className=\"fas fa-times\"\r\n                />\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport Add from \"./components/Add\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Edit from \"./components/Edit\";\nimport List from \"./components/List\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [\"something\", \"something else\"],\n      name: \"\",\n      update: \"\"\n    };\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newItm = this.state.name;\n    const newData = this.state.data;\n\n    newData.push(newItm);\n\n    this.setState({\n      data: newData\n    });\n    const inp = document.getElementById(\"reset\");\n    inp.value = \"\";\n  };\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  deleteItem = e => {\n    const indexElement = parseInt(e.target.id);\n\n    this.setState({\n      data: this.state.data.filter((item, index) => {\n        return index !== indexElement;\n      })\n    });\n  };\n\n  onEdit = (e, id) => {\n    e.preventDefault();\n    const newArr = this.state.data;\n    newArr[id] = this.state.update;\n    this.setState({\n      data: newArr\n    });\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <h1>To do app</h1>\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <div>\n                  <Add\n                    {...props}\n                    handleSubmit={this.onSubmit}\n                    handleChange={this.onChange}\n                  />\n                  <List\n                    {...props}\n                    data={this.state.data}\n                    deleteClickHandler={this.deleteItem}\n                  />\n                </div>\n              )}\n            />\n            <Route\n              exact\n              path=\"/edit/:id\"\n              render={props => (\n                <Edit\n                  {...props}\n                  handleChange={this.onChange}\n                  data={this.state.data}\n                  editHandler={this.onEdit}\n                />\n              )}\n            />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}